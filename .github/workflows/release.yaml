name: release
on:
  push:
    tags:
      - v*.*.*

permissions:
  contents: read

jobs:
  sanity-check:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Verify package.json has correct version for tag
        run: |
          pkg_json="$(jq -r .version package.json)"
          tag="${{ github.ref_name }}"
          tag_ver="$(sed -E 's/^v([^-]+)(-.*)?$/\1/' <<< "$tag")"
          if [[ "$pkg_json" != "$tag_ver" ]]; then
            echo "::error::package.json has version ${pkg_json}, expected ${tag_ver}"
            exit 1
          fi

  create-draft-release:
    needs: [sanity-check]
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - run: gh release create ${{ github.ref_name }} -d -t ${{ github.ref_name }} --verify-tag
        env:
          GH_TOKEN: ${{ github.token }}

  binaries:
    needs: [create-draft-release]
    uses: ./.github/workflows/binaries.yaml
    permissions:
      attestations: write
      contents: write
      id-token: write
    with:
      provenance: true
      upload-assets: true

  npm-package:
    needs: [create-draft-release]
    uses: ./.github/workflows/npm_package.yaml
    permissions:
      contents: write
    with:
      upload-assets: true

  npm-publish:
    if: "!contains(github.ref_name, '-')"
    environment: npm-publish
    needs: [binaries, npm-package]
    runs-on: ubuntu-24.04
    permissions:
      id-token: write
    steps:
      - uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          registry-url: https://registry.npmjs.org
          version: 24
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          artifact-ids: ${{ needs.npm-package.outputs.artifact-id }}
      - run: npm publish go-text-template-napi-*.tgz
